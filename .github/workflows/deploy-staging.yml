name: Deploy to Staging

on:
  push:
    branches: ['staging']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'staging'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build for staging
        run: npm run build -- --mode staging
        env:
          VITE_DEPLOY_ENV: staging
        
      - name: Create staging directory structure
        run: |
          mkdir -p staging-dist/aleph/staging
          cp -r dist/* staging-dist/aleph/staging/
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: staging-build
          path: './staging-dist'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          
      - name: Download staging build
        uses: actions/download-artifact@v4
        with:
          name: staging-build
          path: ./staging-dist
          
      - name: Deploy staging build
        run: |
          # Remove old staging build if exists
          rm -rf aleph/staging
          
          # Copy new staging build
          mkdir -p aleph
          cp -r staging-dist/aleph/staging aleph/
          
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Commit and push
          git add aleph/staging
          git commit -m "Deploy staging build" || echo "No changes to commit"
          git push origin gh-pages